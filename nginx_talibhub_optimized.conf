# Configuration nginx optimisée pour TalibHub - Production Ready
# ==============================================================

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;
limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=general:10m rate=60r/m;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=addr:10m;

# Redirection de HTTP vers HTTPS et non-www vers www
server {
    listen 80;
    server_name talibhub.com www.talibhub.com;
    
    # Security headers même pour les redirections
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    
    # Force redirection vers www en HTTPS
    return 301 https://www.talibhub.com$request_uri;
}

# Redirection HTTPS non-www vers www
server {
    listen 443 ssl http2;
    server_name talibhub.com;

    # Configuration SSL
    ssl_certificate /etc/letsencrypt/live/talibhub.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/talibhub.com/privkey.pem;
    
    # Force redirection vers www
    return 301 https://www.talibhub.com$request_uri;
}

# Configuration principale HTTPS pour www
server {
    listen 443 ssl http2;
    server_name www.talibhub.com;

    # Configuration SSL optimisée
    ssl_certificate /etc/letsencrypt/live/talibhub.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/talibhub.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    # SSL optimizations
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Configuration racine
    root /var/www/TalibHub/Front-End;
    index index.html index-fr.html index-en.html;

    # Rate limiting
    limit_req zone=general burst=20 nodelay;
    limit_conn addr 10;

    # Configuration proxy pour l'API avec rate limiting
    location /api/ {
        # Rate limiting spécifique à l'API
        limit_req zone=api burst=10 nodelay;
        
        # Rate limiting plus strict pour l'authentification
        location ~ ^/api/(auth|login|register|oauth) {
            limit_req zone=auth burst=3 nodelay;
            proxy_pass http://localhost:4000;
        }
        
        proxy_pass http://localhost:4000/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # Configuration des cookies sécurisée
        proxy_cookie_domain localhost www.talibhub.com;
        proxy_cookie_path / "/";
        proxy_cookie_flags ~ secure samesite=strict;

        # Timeouts optimisés
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffer optimization
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }

    # Configuration WebSocket avec sécurité renforcée
    location /ws {
        # Vérification que c'est bien une connexion WebSocket
        if ($http_upgrade != "websocket") {
            return 426;
        }
        
        proxy_pass http://localhost:4000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Configuration des cookies pour WebSocket
        proxy_cookie_domain localhost www.talibhub.com;
        proxy_cookie_path / "/";
        
        # Timeouts WebSocket
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        
        # Empêcher la mise en buffer pour WebSocket
        proxy_buffering off;
    }

    # Configuration SPA optimisée avec gestion multilingue
    location / {
        try_files $uri $uri/ @fallback;
        
        # Cache spécifique pour les fichiers HTML
        location ~* \.html$ {
            add_header Cache-Control "no-cache, must-revalidate, max-age=0" always;
            add_header Vary "Accept-Language" always;
        }
    }

    # Fallback pour SPA avec détection de langue
    location @fallback {
        # Détection basée sur Accept-Language
        set $lang_file "/index.html";
        if ($http_accept_language ~* "^fr") {
            set $lang_file "/index-fr.html";
        }
        if ($http_accept_language ~* "^en") {
            set $lang_file "/index-en.html";
        }
        
        try_files $lang_file /index.html;
        add_header Cache-Control "no-cache, must-revalidate, max-age=0" always;
        add_header Vary "Accept-Language" always;
    }

    # Cache optimisé pour les assets statiques
    location ~* \.(js|css|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable" always;
        add_header Vary "Accept-Encoding" always;
        
        # Préchargement pour les assets critiques
        location ~* \.(css)$ {
            add_header Link "</style.css>; rel=preload; as=style" always;
        }
    }

    # Cache pour les images avec compression
    location ~* \.(png|jpg|jpeg|gif|ico|svg|webp)$ {
        expires 6M;
        add_header Cache-Control "public, no-transform" always;
        add_header Vary "Accept-Encoding" always;
        
        # Compression d'images à la volée si supportée
        try_files $uri $uri/ =404;
    }

    # Configuration gzip optimisée
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 256;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        application/rdf+xml
        image/svg+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject;

    # Brotli compression (si module disponible)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/javascript application/json image/svg+xml;

    # Headers de sécurité renforcés
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Permitted-Cross-Domain-Policies "none" always;
    add_header X-Download-Options "noopen" always;
    
    # Content Security Policy (ajusté selon votre app.js)
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://unpkg.com https://cdnjs.cloudflare.com https://cdn.jsdelivr.net https://challenges.cloudflare.com; style-src 'self' 'unsafe-inline' https://unpkg.com https://cdnjs.cloudflare.com; font-src 'self' data: https://cdnjs.cloudflare.com; img-src 'self' data: https:; connect-src 'self' https://api.aladhan.com https://api.alquran.cloud https://cdn.islamic.network https://challenges.cloudflare.com wss://www.talibhub.com; media-src 'self' https://cdn.islamic.network; frame-src 'self' https://challenges.cloudflare.com; object-src 'none';" always;

    # Pages d'erreur personnalisées
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /var/www/TalibHub/Front-End;
        internal;
    }

    # Limite de taille pour les uploads
    client_max_body_size 10M;
    client_body_buffer_size 16k;
    client_header_buffer_size 1k;
    large_client_header_buffers 2 1k;

    # Configuration des logs avec rotation
    access_log /var/log/nginx/talibhub_access.log combined buffer=16k flush=5m;
    error_log /var/log/nginx/talibhub_error.log warn;

    # Désactiver les logs pour les assets (optionnel pour réduire le volume)
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2)$ {
        access_log off;
        expires 6M;
        add_header Cache-Control "public, no-transform" always;
    }

    # Protection contre les scans de vulnérabilités
    location ~* \.(env|git|htaccess|htpasswd)$ {
        deny all;
        return 404;
    }

    # Bloquer les tentatives d'accès aux fichiers sensibles
    location ~* \.(sql|log|conf|bak|backup|old|tmp)$ {
        deny all;
        return 404;
    }

    # Robots.txt et sitemap
    location = /robots.txt {
        access_log off;
        log_not_found off;
    }

    location = /sitemap.xml {
        access_log off;
        log_not_found off;
    }

    # Health check endpoint
    location = /health {
        access_log off;
        return 200 'healthy\n';
        add_header Content-Type text/plain always;
    }

    # Monitoring endpoint (à protéger par IP si nécessaire)
    location = /nginx-status {
        # allow 127.0.0.1;
        # deny all;
        access_log off;
        return 200 'nginx ok\n';
        add_header Content-Type text/plain always;
    }
} 